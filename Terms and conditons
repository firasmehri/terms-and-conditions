<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice Confirmation</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://cdn.jsdelivr.net/npm/signature_pad@4.0.0/dist/signature_pad.umd.min.js"></script>
</head>
<body>
    <div class="container">
        <header>
            <h1>Art En Solutions</h1>
        </header>
        <main>
            <section class="invoice-section">
                <h2>Your Invoice</h2>
                <iframe id="invoice" src="path/to/invoice.pdf" width="100%" height="600px"></iframe>
            </section>
            <section class="signature-section">
                <h2>Sign Here</h2>
                <canvas id="signature-pad" width="600" height="200"></canvas>
                <button id="clear">Clear</button>
            </section>
            <section class="terms-section">
                <input type="checkbox" id="terms" required>
                <label for="terms">I agree to the <a href="path/to/terms.pdf" target="_blank">terms and conditions</a></label>
            </section>
            <button id="submit">Submit</button>
        </main>
    </div>

    <script src="scripts.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    width: 80%;
    margin: 0 auto;
}

header {
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 1rem 0;
}

.invoice-section, .signature-section, .terms-section {
    margin: 2rem 0;
}

h2 {
    margin-bottom: 1rem;
}

canvas {
    border: 1px solid #ccc;
}

button {
    padding: 0.5rem 1rem;
    background-color: #333;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #555;
}

input[type="checkbox"] {
    margin-right: 0.5rem;
}
document.addEventListener('DOMContentLoaded', function () {
    const signaturePad = new SignaturePad(document.getElementById('signature-pad'));

    document.getElementById('clear').addEventListener('click', function () {
        signaturePad.clear();
    });

    document.getElementById('submit').addEventListener('click', function () {
        if (signaturePad.isEmpty()) {
            alert('Please provide a signature.');
            return;
        }

        if (!document.getElementById('terms').checked) {
            alert('You must agree to the terms and conditions.');
            return;
        }

        const signatureData = signaturePad.toDataURL();
        console.log('Signature Data:', signatureData);

        // Here you would typically send the data to the server
        // For example:
        // fetch('/submit-invoice', {
        //     method: 'POST',
        //     headers: {
        //         'Content-Type': 'application/json',
        //     },
        //     body: JSON.stringify({ signature: signatureData, agreed: true }),
        // })
        // .then(response => response.json())
        // .then(data => console.log('Success:', data))
        // .catch(error => console.error('Error:', error));

        alert('Invoice submitted successfully!');
    });
});
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Upload</title>
    <link rel="stylesheet" href="admin-styles.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Admin Upload</h1>
        </header>
        <main>
            <form id="upload-form" action="/upload" method="POST" enctype="multipart/form-data">
                <label for="invoice">Invoice (PDF):</label>
                <input type="file" id="invoice" name="invoice" accept="application/pdf" required>
                <br><br>
                <label for="terms">Terms and Conditions (PDF):</label>
                <input type="file" id="terms" name="terms" accept="application/pdf" required>
                <br><br>
                <label for="image">Images (optional):</label>
                <input type="file" id="image" name="images[]" accept="image/*" multiple>
                <br><br>
                <button type="submit">Upload</button>
            </form>
            <section id="uploads">
                <h2>Uploaded Files</h2>
                <div id="file-list"></div>
            </section>
        </main>
    </div>

    <script src="admin-scripts.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    width: 80%;
    margin: 0 auto;
}

header {
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 1rem 0;
}

form {
    margin: 2rem 0;
}

label {
    display: block;
    margin-top: 1rem;
}

button {
    padding: 0.5rem 1rem;
    background-color: #333;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #555;
}

#uploads {
    margin-top: 2rem;
}
document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('upload-form');
    const fileList = document.getElementById('file-list');

    form.addEventListener('submit', function (event) {
        event.preventDefault();

        const formData = new FormData(form);

        fetch('/upload', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            alert('Files uploaded successfully!');
            updateFileList(data.files);
        })
        .catch(error => console.error('Error:', error));
    });

    function updateFileList(files) {
        fileList.innerHTML = '';
        files.forEach(file => {
            const div = document.createElement('div');
            div.textContent = file;
            fileList.appendChild(div);
        });
    }
});
const express = require('express');
const multer = require('multer');
const path = require('path');

const app = express();
const upload = multer({ dest: 'uploads/' });

app.use(express.static('public'));

app.post('/upload', upload.fields([{ name: 'invoice' }, { name: 'terms' }, { name: 'images' }]), (req, res) => {
    const files = req.files;
    let fileNames = [];

    for (let field in files) {
        files[field].forEach(file => {
            fileNames.push(file.originalname);
        });
    }

    res.json({ files: fileNames });
});

app.listen(3000, () => {
    console.log('Server is running on http://localhost:3000');
});
